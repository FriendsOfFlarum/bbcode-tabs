{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,+BCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,gC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,wC,aCMxDC,IAAAA,aAAAA,IAAqB,mBAAmB,WACtC,IAAIC,EAAK,EAEHC,EAAa,WACEC,KAAKC,EAAE,SAEfC,MAAK,SAACC,EAAGC,GAClB,IAAMC,EAAaJ,EAAEG,GAErB,IAAIC,EAAWC,KAAK,6BAA6BC,OAAjD,CAEA,IAAMC,EAAUH,EAAWC,KAAK,gCAEhC,GAAKE,EAAQD,OAAb,CAEA,IAAME,EAASJ,EAAWC,KAAK,QACzBI,EAAMZ,IAEZU,EAAQG,KAAK,OAAb,aAAkCD,GAE7BF,EAAQI,GAAG,cAAcJ,EAAQ,GAAGK,aAAa,UAAW,WAEjEJ,EAAOP,MAAK,SAACC,EAAGW,GACd,IAAMC,EAAQd,EAAEa,GACVhB,EAAK,OAAOY,EAAV,OAAmBP,EAE3BY,EAAMT,KAAK,uBAAuBK,KAAK,KAAMb,GAC7CiB,EAAMT,KAAK,SAASK,KAAK,MAAOb,EACjC,GAf0B,CAJoC,CAoBhE,GACF,GAEDkB,EAAAA,EAAAA,QAAOC,IAAAA,UAAuB,CAAC,WAAY,YAAalB,IACxDiB,EAAAA,EAAAA,QAAOE,IAAAA,UAA+B,YAAY,WAAY,YAC5DF,EAAAA,EAAAA,QAAOhB,KAAKmB,MAAO,YAAY,kBAAMpB,EAAWT,KAAK,EAAtB,GAChC,GACF,G","sources":["webpack://@fof/bbcode-tabs/webpack/bootstrap","webpack://@fof/bbcode-tabs/webpack/runtime/compat get default export","webpack://@fof/bbcode-tabs/webpack/runtime/define property getters","webpack://@fof/bbcode-tabs/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/bbcode-tabs/webpack/runtime/make namespace object","webpack://@fof/bbcode-tabs/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/bbcode-tabs/external root \"flarum.core.compat['common/extend']\"","webpack://@fof/bbcode-tabs/external root \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@fof/bbcode-tabs/external root \"flarum.core.compat['forum/components/ComposerPostPreview']\"","webpack://@fof/bbcode-tabs/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/CommentPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/ComposerPostPreview'];","import app from 'flarum/forum/app';\n\nimport { extend } from 'flarum/common/extend';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nimport ComposerPostPreview from 'flarum/forum/components/ComposerPostPreview';\n\napp.initializers.add('fof/bbcode-tabs', () => {\n  let id = 0;\n\n  const createTabs = function () {\n    const containers = this.$('.tabs');\n\n    containers.each((i, container) => {\n      const $container = $(container);\n\n      if ($container.find('input[type=\"radio\"][name]').length) return;\n\n      const $inputs = $container.find('> .tab > input[type=\"radio\"]');\n\n      if (!$inputs.length) return;\n\n      const $items = $container.find('.tab');\n      const num = id++;\n\n      $inputs.attr('name', `tab-group-${num}`);\n\n      if (!$inputs.is('[checked]')) $inputs[0].setAttribute('checked', 'checked');\n\n      $items.each((i, item) => {\n        const $item = $(item);\n        const id = `tab-${num}-${++i}`;\n\n        $item.find('input[type=\"radio\"]').attr('id', id);\n        $item.find('label').attr('for', id);\n      });\n    });\n  };\n\n  extend(CommentPost.prototype, ['oncreate', 'onupdate'], createTabs);\n  extend(ComposerPostPreview.prototype, 'oncreate', function () {\n    extend(this.attrs, 'surround', () => createTabs.call(this));\n  });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","id","createTabs","this","$","each","i","container","$container","find","length","$inputs","$items","num","attr","is","setAttribute","item","$item","extend","CommentPost","ComposerPostPreview","attrs"],"sourceRoot":""}